name: Release

on:
  push:
    branches:
      - release

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set Up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # Step 3: Install Dependencies
    - name: Install Dependencies
      run: npm install

    # Step 4: Deploy Infrastructure with SAM
    - name: Deploy Infrastructure
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: sam deploy --no-confirm-changeset --no-fail-on-empty-changeset --stack-name rover-frontend --capabilities CAPABILITY_IAM --template-file ./sam/template.yaml --region us-east-1

    # Step 5: Extract SAM Outputs
    - name: Get SAM Outputs
      id: get_sam_outputs
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: |
        COGNITO_HOSTED_UI=$(aws cloudformation describe-stacks --stack-name rover-frontend \
          --query "Stacks[0].Outputs[?OutputKey=='CognitoHostedUIDomain'].OutputValue" --output text)
        COGNITO_USER_POOL_ID=$(aws cloudformation describe-stacks --stack-name rover-frontend \
          --query "Stacks[0].Outputs[?OutputKey=='CognitoUserPoolClientId'].OutputValue" --output text)
        echo "REACT_APP_COGNITO_HOSTED_UI=$COGNITO_HOSTED_UI" > .env
        echo "REACT_APP_COGNITO_CLIENT_ID=$COGNITO_USER_POOL_ID" >> .env

    # Step 6: Build React App
    - name: Build React App
      run: npm run build

    # Step 7: Get Bucket Name
    - name: Get Bucket Name
      id: get_bucket_name
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: |
        BUCKET_NAME=$(aws cloudformation describe-stacks --stack-name rover-frontend \
          --query "Stacks[0].Outputs[?OutputKey=='S3BucketName'].OutputValue" --output text)
        echo "BUCKET_NAME=$BUCKET_NAME" >> $GITHUB_ENV

    # Step 8: Deploy React App to S3
    - name: Deploy React App to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: us-east-1
      run: aws s3 sync ./build s3://$BUCKET_NAME --delete